name: Playwright Systems Tests (V2.2)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  setup-backend:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y default-jre pkg-config libssl-dev
          
      - name: Install Docker
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          
      - name: Start Docker
        run: sudo service docker start
          
      - name: Install pnpm
        run: npm install -g pnpm
          
      - name: Clone and setup atproto
        run: |
          git clone https://github.com/bluesky-social/atproto.git
          cd atproto
          pnpm i
          pnpm build
          
      - name: Start PostgreSQL
        run: |
          sudo docker run -d --name postgres \
            -e POSTGRES_PASSWORD=postgres \
            -e POSTGRES_USER=postgres \
            -p 5432:5432 \
            postgres:13-alpine
          sleep 10 # Wait for DB to start
          
      - name: Start backend services
        working-directory: ./atproto/packages/dev-env
        run: pnpm start &
        env:
          DID_PLC_URL: http://localhost:2582
          ATP_CASSANDRA_URL: localhost:9042
          ATP_ELASTICSEARCH_URL: http://localhost:9200
          ATP_POSTGRES_URL: postgres://postgres:postgres@localhost:5432/postgres

  run-login-system-tests:
    needs: setup-backend
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js Package
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install project dependencies with yarn
        run: yarn install

      - name: Install Playwright and browsers
        run: |
          npm install -D @playwright/test
          npx playwright install --with-deps
          npx playwright install chromium

      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y default-jre
          export ALLURE_VERSION=$(curl -s https://api.github.com/repos/allure-framework/allure2/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')
          wget https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.tgz
          tar -xvzf allure-${ALLURE_VERSION}.tgz
          sudo mv allure-${ALLURE_VERSION} /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
          allure --version

      - name: Install Allure Playwright Reporter
        run: npm install -D allure-playwright

      - name: Run Playwright tests
        run: xvfb-run npx playwright test --grep @login --reporter=line,allure-playwright
        env:
          CIS565_EMAIL: ${{ secrets.CIS565_EMAIL}}
          CIS565_PASSWORD: ${{ secrets.CIS565_EMAIL}}
          ATP_API_URL: http://localhost:2583

      - name: Debug Allure Results
        run: ls -la allure-results

      - name: Generate Allure report
        run: allure generate allure-results --clean -o allure-report

      - name: Debug Allure Report
        run: ls -la allure-report

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-login-ui-report
          path: allure-report/
          retention-days: 30

  run-search-system-tests:
    needs: setup-backend
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js Package
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install project dependencies with yarn
        run: yarn install

      - name: Install Playwright and browsers
        run: |
          npm install -D @playwright/test
          npx playwright install --with-deps
          npx playwright install chromium

      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y default-jre
          export ALLURE_VERSION=$(curl -s https://api.github.com/repos/allure-framework/allure2/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')
          wget https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.tgz
          tar -xvzf allure-${ALLURE_VERSION}.tgz
          sudo mv allure-${ALLURE_VERSION} /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
          allure --version

      - name: Install Allure Playwright Reporter
        run: npm install -D allure-playwright

      - name: Run Playwright tests
        run: xvfb-run npx playwright test --grep @search --reporter=line,allure-playwright
        env:
          ATP_API_URL: http://localhost:2583

      - name: Debug Allure Results
        run: ls -la allure-results

      - name: Generate Allure report
        run: allure generate allure-results --clean -o allure-report

      - name: Debug Allure Report
        run: ls -la allure-report

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-search-ui-report
          path: allure-report/
          retention-days: 30
